Samantha Shon
506170927


a. A brief description of notable obstacles you overcame.  
- The main problem that I had was learning how to use ":" while using for loops. For example, Within the "isAfloat" function, I had to use "for ( char b : a)" in order to go through the string to check for decimal points and digits. I believe I had used the colon before in a for loop, and it is more efficient, but I found myself getting confused due to its simplicity. Additionally, I had trouble with one of my test cases where I could not build the program due to "Unterminated function-like macro invocation" which came up as a compiler error while I was testing my shiftLeft function. This obstacle where I could not figure out how to test my shiftLeft function was solved by realizing that I only return the amount of strings that are replaced by placeholder. Therefore, I was able to overcome and finally test my last function


b. A list of the test data that could be used to thoroughly test your functions,  
along with the reason for each test. 
-     string array[8] = { "123", "456", "789", "gamma", "beta", "delta", "Hey", "1.2.3"};
    assert( locateMaximum (array,6) == 3);
    assert( countFloatingPointValues (array,8) == 3);
    assert( hasNoCapitals (array, 7) == **false**);
    assert( shiftLeft (array, 6, 2, "foo") == 2);


This was pulled from the Project 4 outline but I added a couple extra strings to thoroughly test my functions. I know that for the locateMaximum function, the program must return 3 in order to highlight that "gamma" is the largest item that comes first within the array. "123", "456", "789" were used to test if the countFloatingPointValues function would recognize these three strings as floats. Additionally, I added "1.2.3" to the array in order to test my function's ability to return false when there were digits, but more than one decimal point, making the value not a float. "gamma", "beta", "delta" were used to test the hasNoCapitals function to see if the function would return true, which it does when considering only the first six strings in the array. However, I added "Hey" just to see if the function worked correctly and would return false if there was an actual capital letter in a string. Lastly, I had to make sure that the shiftLeft function would return the correct number of replaced strings, which would be 2.


-     string array[8] = { "123", "456", "789", "gamma", "beta", "delta", "1.2.3", "hEllo"}
    assert( locateMaximum (array,6) == 3);
    assert( countFloatingPointValues (array,8) == 3);
    assert( hasNoCapitals (array, 8) == **false**);
        assert( shiftLeft (array, 6, 2, "foo") == 2);


Additionally, I added "hEllo" to see if the function would still return false if I removed "Hey" and inserted a string that did not have a capital letter as its first letter.


 -     string array[8] = { "123", "456", "789", "gamma", "beta", "delta", "1.2.3", "hEllo"}
         assert( shiftLeft (array, 6, -2, "foo") == -1);


I also must make sure that a negative amount for the shiftLeft string would return -1.


-     string array[6] = {""}
    assert( shiftLeft (array, 6, 2, "foo") == -1);
    assert( locateMaximum (array, 6))


Must make sure that the shiftLeft functions will return -1 for an empty string.


-     string array[5] = {".7", "s.34", "m,.56", "ms.34", "0.8s"}
        assert( countFloatingPointValues (array [5]) == 1);


Makes sure that the float only reads the digits and decimals.




-     string array[5] = { "123", "456", "789", "gamma", "beta"}
        assert( shiftLeft (array, 5, 10, "foo") == 5);


This was one test that my shiftLeft function would always fail. This is because the amount that is inputted is greater than the amount of strings in the array.